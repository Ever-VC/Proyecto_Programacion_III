/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import controladores.AsistenciaControlador;
import controladores.EstudianteControlador;
import controladores.TalleresPonenciasControlador;
import modelos.Estudiantes;
import modelos.Talleresponencias;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Asistencia;

/**
 *
 * @author Ever VÃ¡squez
 */
public class jpTalleresPonencias extends javax.swing.JPanel {

    /**
     * Creates new form jpTalleresPonencias
     */
    public jpTalleresPonencias() {
        initComponents();
        cargarTalleres();
        txtIdPonencia.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdPonencia = new javax.swing.JTextField();
        txtNombrePonencia = new javax.swing.JTextField();
        txtEncargado = new javax.swing.JTextField();
        txtLugar = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        btnGuardarPonencia = new javax.swing.JButton();
        txtHora = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPonencias = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(46, 51, 73));
        setPreferredSize(new java.awt.Dimension(686, 437));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("AGREGAR TALLER - PONENCIA");

        txtIdPonencia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtIdPonencia.setBorder(javax.swing.BorderFactory.createTitledBorder("ID:"));

        txtNombrePonencia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtNombrePonencia.setBorder(javax.swing.BorderFactory.createTitledBorder("TITULO:"));

        txtEncargado.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtEncargado.setBorder(javax.swing.BorderFactory.createTitledBorder("ENCARGADO:"));

        txtLugar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtLugar.setBorder(javax.swing.BorderFactory.createTitledBorder("LUGAR DE TALLER O PONENCIA:"));

        lblFecha.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("FECHA DE TALLER O PONENCIA:");

        btnGuardarPonencia.setBackground(new java.awt.Color(28, 109, 66));
        btnGuardarPonencia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnGuardarPonencia.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarPonencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/blanco.png"))); // NOI18N
        btnGuardarPonencia.setText("GUARDAR REGISTRO");
        btnGuardarPonencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarPonencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPonenciaActionPerformed(evt);
            }
        });

        txtHora.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtHora.setBorder(javax.swing.BorderFactory.createTitledBorder("HORA INICIO - FIN:"));

        tblPonencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TITULO", "ENCARGADO", "LUGAR", "FECHA", "HORA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPonencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPonenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPonencias);
        if (tblPonencias.getColumnModel().getColumnCount() > 0) {
            tblPonencias.getColumnModel().getColumn(0).setResizable(false);
            tblPonencias.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblPonencias.getColumnModel().getColumn(1).setResizable(false);
            tblPonencias.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblPonencias.getColumnModel().getColumn(2).setResizable(false);
            tblPonencias.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblPonencias.getColumnModel().getColumn(3).setResizable(false);
            tblPonencias.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblPonencias.getColumnModel().getColumn(4).setResizable(false);
            tblPonencias.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblPonencias.getColumnModel().getColumn(5).setResizable(false);
            tblPonencias.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        btnEditar.setBackground(new java.awt.Color(23, 173, 235));
        btnEditar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/edit.png"))); // NOI18N
        btnEditar.setText("EDITAR REGISTRO");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(76, 8, 8));
        btnEliminar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/bin.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR REGISTRO");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(328, 328, 328))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblFecha)
                        .addComponent(txtIdPonencia, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLugar)
                        .addComponent(txtEncargado)
                        .addComponent(txtNombrePonencia, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtHora)
                        .addComponent(btnGuardarPonencia, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIdPonencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombrePonencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lblFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardarPonencia, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarPonenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPonenciaActionPerformed
        // TODO add your handling code here:
        if  (!(("".equals(txtNombrePonencia.getText())) || ("".equals(txtEncargado.getText())) || ("".equals(txtLugar.getText())) || ("".equals(txtHora.getText()))))
        {
            Talleresponencias ponencia = new Talleresponencias();
            ponencia.setNombre(txtNombrePonencia.getText());
            ponencia.setNombreEncargado(txtEncargado.getText());
            String fecha;
            ponencia.setLugar(txtLugar.getText());
            SimpleDateFormat formato = new SimpleDateFormat("yyy-MM-dd");
            fecha = formato.format(jDateChooser1.getDate());
            ponencia.setFecha(fecha);
            ponencia.setHora(txtHora.getText());
            TalleresPonenciasControlador controlador = new TalleresPonenciasControlador();
            controlador.insertarTallerPonencia(ponencia);
            JOptionPane.showMessageDialog(null, "EL REGISTRO FUE INSERTADO EXITOSAMENTE.","REGISTRO INSERTADO.", JOptionPane.INFORMATION_MESSAGE);
            limpiar();
            cargarTalleres();
        }
        else{
            JOptionPane.showMessageDialog(null, "ASEGURESE DE HABER LLENADO COMPLETMENTE EL FORMULARIO.","ERROR.", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnGuardarPonenciaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if (!(("".equals(txtNombrePonencia.getText())) || ("".equals(txtEncargado.getText())) || ("".equals(txtLugar.getText())) || ("".equals(txtHora.getText())))) {
            Talleresponencias ponencia = new Talleresponencias();
            ponencia.setIdTallerponencia(Integer.parseInt(txtIdPonencia.getText()));
            ponencia.setNombre(txtNombrePonencia.getText());
            ponencia.setNombreEncargado(txtEncargado.getText());
            ponencia.setLugar(txtLugar.getText());
            String fecha;
            SimpleDateFormat formato = new SimpleDateFormat("yyy-MM-dd");
            fecha = formato.format(jDateChooser1.getDate());
            ponencia.setFecha(fecha);
            ponencia.setHora(txtHora.getText());
            
            TalleresPonenciasControlador controlador = new TalleresPonenciasControlador();
            controlador.editarTallerPonencia(ponencia);
            JOptionPane.showMessageDialog(null, "EL REGISTRO SE ACTUALIZÃ EXITOSAMENTE.","REGISTRO ACTUALIZADO.", JOptionPane.INFORMATION_MESSAGE);
            limpiar();
            cargarTalleres();
        }
        else{
            JOptionPane.showMessageDialog(null, "ASEGURESE DE HABER SELECCIONADO EL RESGISTRO QUE DESEA EDITAR.","ERROR.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!(("".equals(txtNombrePonencia.getText())) || ("".equals(txtEncargado.getText())) || ("".equals(txtLugar.getText())) || ("".equals(txtHora.getText())))) {
            int verificar = JOptionPane.showConfirmDialog(null, "Â¿ESTA SEGURO QUE DESEA ELIMINAR EL REGISTRO?", "CONFIRME.", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (verificar == JOptionPane.YES_OPTION){
                
                int idElim = Integer.parseInt(txtIdPonencia.getText());
                buscarCursoAsistido(idElim);
                
                TalleresPonenciasControlador controlador = new TalleresPonenciasControlador();
                controlador.eliminarTallerPonencia(idElim);
                JOptionPane.showMessageDialog(null, "EL REGISTRO FUE ELIMINADO EXITOSAMENTE.","REGISTRO ELIMINADO.", JOptionPane.INFORMATION_MESSAGE);
                limpiar();
            cargarTalleres();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "ASEGURESE DE HABER SELECCIONADO EL RESGISTRO QUE DESEA ELIMINAR.","ERROR.", JOptionPane.ERROR_MESSAGE);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblPonenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPonenciasMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblPonenciasMouseClicked

    private void cargarTalleres(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel)tblPonencias.getModel();
        modelo.setRowCount(0);//Limpia todas los registros de la tabla (Basicamente le indica que no quiere ninguna fila)
        TalleresPonenciasControlador controlador = new TalleresPonenciasControlador();
        List<Talleresponencias> lstPonencias = controlador.getLisTalleresPonencias();
        //jpNuevoEstudiante.
        for (Talleresponencias item : lstPonencias) {
            modelo.addRow(new Object[]{item.getIdTallerponencia(), item.getNombre(), item.getNombreEncargado(), item.getLugar(), item.getFecha(), item.getHora()});
        }
    }

    private void limpiar(){
        txtEncargado.setText("");
        txtHora.setText("");
        txtIdPonencia.setText("");
        txtLugar.setText("");
        txtNombrePonencia.setText("");
        
    }
    private void buscarCursoAsistido(int idTaller){
        AsistenciaControlador controlador1 = new AsistenciaControlador();
        List<Asistencia> lstAsistencia = controlador1.getLisTalleresPonencias();
        List<Integer> idAsistencia = new ArrayList<Integer>();
        int i = 0;
        for (Asistencia item : lstAsistencia) {
            if (idTaller == item.getIdTallerponencia().getIdTallerponencia()) {
                idAsistencia.add(item.getIdAsistencia());
            }
            i ++;
        }
        
        for (int j : idAsistencia) {
            AsistenciaControlador controlador = new AsistenciaControlador();
            controlador.eliminarAsistencia(j);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardarPonencia;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTable tblPonencias;
    private javax.swing.JTextField txtEncargado;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtIdPonencia;
    private javax.swing.JTextField txtLugar;
    private javax.swing.JTextField txtNombrePonencia;
    // End of variables declaration//GEN-END:variables
}
